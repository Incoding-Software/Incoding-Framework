@using Incoding.SiteTest
@model AddProductCommand
<!DOCTYPE html>
<html>
<head>
    <title></title>

    @Html.Incoding().Link(Url.Content("~/Content/bootstrap.css"))
    @Html.Incoding().Link(Url.Content("~/Content/bootstrap-theme.css"))


    @Html.Incoding().Script(Url.Content("~/Scripts/jquery-1.7.2.min.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/underscore.js"))

    @Html.Incoding().Script(Url.Content("~/Scripts/jquery.form.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/jquery.history.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/jquery.validate.min.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/mustache.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/handlebars.js"))

    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.url.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.core.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.meta.helper.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.meta.engine.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.meta.executable.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.meta.conditional.js"))
    @*@Html.Incoding().Script(Url.Content("~/Scripts/incoding.meta.trace.js"))*@
    <script>
        TemplateFactory.Version = '@Guid.NewGuid().ToString()'
    </script>
</head>
<body>

@(Html.When(JqueryBind.Click)      
      .Direct(new [] {new KeyValueVm(1),new KeyValueVm(2)})
      .OnSuccess(dsl => dsl.WithId("Id").Trigger.None())
      .AsHtmlAttributes()
      .ToButton("Test"))

@(Html.When(JqueryBind.None)
      .Event()
      .Where<KeyValueVm>(vm => vm.Value == "1")
      .OnSuccess(dsl => dsl.Window.Alert("Test").If(() => !Selector.Result.IsEmpty()))
      .AsHtmlAttributes(new {id = "Id" })
      .ToDiv())
</body>
</html>