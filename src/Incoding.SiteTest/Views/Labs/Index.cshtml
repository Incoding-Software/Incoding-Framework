@using System
@using Incoding.SiteTest
<!DOCTYPE html>
<html>
<head>
    <title></title>

    @Html.Incoding().Link(Url.Content("~/Content/Site.css"))
    @Html.Incoding().Link(Url.Content("~/Content/css/jasmine.css"))

    @Html.Incoding().Script(Url.Content("~/Scripts/jquery-1.7.2.min.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/underscore.js"))

    @Html.Incoding().Script(Url.Content("~/Scripts/jquery.form.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/jquery.history.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/jquery.validate.min.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/mustache.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/handlebars.js"))

    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.url.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.core.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.meta.helper.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.meta.engine.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.meta.executable.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.meta.conditional.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.meta.trace.js"))
</head>

<body>
<h3>Push</h3>
@(Html.When(JqueryBind.InitIncoding)
      .AjaxPost(Url.Dispatcher().Push(new SampleOfCQRS.Command() { Value = "Value" }))
      .OnSuccess(dsl => dsl.Self().JQuery.Dom.Use(Selector.Result).Html())
      .AsHtmlAttributes()
      .ToDiv())

<h3>Push composite as array</h3>
@(Html.When(JqueryBind.InitIncoding)
      .AjaxPost(Url.Dispatcher()
                   .Push(new SampleOfCQRS.Command() { Value = "Value 1" })
                   .Push(new SampleOfCQRS.Command() { Value = "Value 2" }))
      .OnSuccess(dsl => dsl.Self().JQuery.Dom.Use(Selector.Result).Html())
      .AsHtmlAttributes()
      .ToDiv())

<h3>Push composite</h3>
@(Html.When(JqueryBind.InitIncoding)
      .AjaxPost(Url.Dispatcher()
                   .Push(new SampleOfCQRS.Command() { Value = "Value" })
                   .Push(new SampleOfCQRS.MultipleGenericCommand<string, int, DateTime>()))
      .OnSuccess(dsl => dsl.Self().JQuery.Dom.Use(Selector.Result).Html())
      .AsHtmlAttributes()
      .ToDiv())

<h3>Push composite mix</h3>
@(Html.When(JqueryBind.InitIncoding)
      .AjaxPost(Url.Dispatcher()
                   .Push(new SampleOfCQRS.Command() { Value = "Value 1" })
                   .Push(new SampleOfCQRS.Command() { Value = "Value 2" })
                   .Push(new SampleOfCQRS.MultipleGenericCommand<string, int, DateTime>()))
      .OnSuccess(dsl => dsl.Self().JQuery.Dom.Use(Selector.Result).Html())
      .AsHtmlAttributes()
      .ToDiv())

<h3>Push multiple generic</h3>
@(Html.When(JqueryBind.InitIncoding)
      .AjaxPost(Url.Dispatcher().Push(new SampleOfCQRS.MultipleGenericCommand<string, int, DateTime>()))
      .OnSuccess(dsl => dsl.Self().JQuery.Dom.Use(Selector.Result).Html())
      .AsHtmlAttributes()
      .ToDiv())



</body>

</html>