@using Incoding.SiteTest
@model AddProductCommand
<!DOCTYPE html>
<html>
<head>
    <title></title>

    @Html.Incoding().Link(Url.Content("~/Content/bootstrap.css"))
    @Html.Incoding().Link(Url.Content("~/Content/bootstrap-theme.css"))


    @Html.Incoding().Script(Url.Content("~/Scripts/jquery-1.7.2.min.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/underscore.js"))

    @Html.Incoding().Script(Url.Content("~/Scripts/jquery.form.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/jquery.history.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/jquery.validate.min.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/mustache.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/handlebars.js"))

    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.url.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.core.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.meta.helper.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.meta.engine.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.meta.executable.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.meta.conditional.js"))
    @Html.Incoding().Script(Url.Content("~/Scripts/incoding.meta.trace.js"))
    <script>
        TemplateFactory.Version = '@Guid.NewGuid().ToString()'
    </script>
</head>
<body>
@(Html.When(JqueryBind.InitIncoding)      
      .OnSuccess(dsl => dsl.Self().Trigger.Invoke(JqueryBind.None).TimeOut(1000))
      .When(JqueryBind.None)
      .Ajax(Url.Action("GetVal", new { orginal = "12" }))
      .OnSuccess(dsl => dsl.Self().JQuery.Attr.RemoveClass("hide").If(() => Selector.Result == "1212"))
      .AsHtmlAttributes(new { @class = "label label-important notice-top hide" })
      .ToTag(HtmlTag.Span, @<text>
                               Test
                            </text>))
</body>
</html>